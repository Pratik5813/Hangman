{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkH;AACrC;AAE7ES,EAAE,CAACC,MAAM,CAACC,iBAAiB,CAAC,mBAAmB,EAAE;EAC7CC,KAAK,EAAE,uBAAuB;EAC9BC,IAAI,EAAE,QAAQ;EACdC,QAAQ,EAAE,QAAQ;EAClBC,UAAU,EAAE;IACRC,MAAM,EAAE;MAAEC,IAAI,EAAE,OAAO;MAAEC,OAAO,EAAE,CAAC,EAAE;IAAE,CAAC;IACxCC,mBAAmB,EAAE;MAAEF,IAAI,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAE,CAAC;IACnDE,WAAW,EAAE;MAAEH,IAAI,EAAE;IAAS,CAAC;IAC/BI,cAAc,EAAE;MAAEJ,IAAI,EAAE;IAAS,CAAC;IAClCK,SAAS,EAAE;MAAEJ,OAAO,EAAEK;IAAU,CAAC;IACjCC,YAAY,EAAE;MAAEN,OAAO,EAAEK;IAAU;EACvC,CAAC;EACDH,WAAW,EAAE,4BAA4B;EACzCK,IAAI,EAAEC,aAAa;EACnBC,IAAI,EAAE,SAAAA,CAAA,EAAY;IACd,OAAO,IAAI;EACf;AACJ,CAAC,CAAC;AAEF,SAASD,aAAaA,CAACE,KAAK,EAAE;EAC1B,SAASC,SAASA,CAACC,SAAS,EAAE;IAC1BF,KAAK,CAACG,aAAa,CAAC;MAAEf,MAAM,EAAEc;IAAU,CAAC,CAAC;EAC9C;EACA,SAASE,gBAAgBA,CAACC,YAAY,EAAE;IACpCL,KAAK,CAACG,aAAa,CAAC;MAAEZ,mBAAmB,EAAEc;IAAa,CAAC,CAAC;EAC9D;EACA,SAASC,iBAAiBA,CAACC,UAAU,EAAE;IACnCP,KAAK,CAACG,aAAa,CAAC;MAAEX,WAAW,EAAEe;IAAW,CAAC,CAAC;EACpD;EACA,SAASC,aAAaA,CAACC,UAAU,EAAE;IAC/BT,KAAK,CAACG,aAAa,CAAC;MAAEV,cAAc,EAAEgB;IAAW,CAAC,CAAC;EACvD;EACA,SAASC,YAAYA,CAACC,QAAQ,EAAE;IAC5BX,KAAK,CAACG,aAAa,CAAC;MAAET,SAAS,EAAEiB,QAAQ,CAACC;IAAI,CAAC,CAAC;EACpD;EACA,SAASC,eAAeA,CAACC,eAAe,EAAE;IACtCd,KAAK,CAACG,aAAa,CAAC;MAAEP,YAAY,EAAEkB,eAAe,CAACF;IAAI,CAAC,CAAC;EAC9D;EACA,OACIG,iEAAA,CAAAC,wDAAA,QACID,iEAAA,CAACpC,sEAAiB,QACdoC,iEAAA,CAACvC,4DAAS,QACNuC,iEAAA,CAACtC,2DAAQ,QACLsC,iEAAA,CAAC3C,8DAAW;IAAC6C,KAAK,EAAC,uBAAuB;IAACC,KAAK,EAAElB,KAAK,CAACb,UAAU,CAACI,mBAAoB;IAACF,IAAI,EAAC,QAAQ;IAAC8B,QAAQ,EAAEf;EAAiB,CAAc,CACzI,CAAC,EACXW,iEAAA,CAACtC,2DAAQ,QACLsC,iEAAA,CAACrC,kEAAe;IAAC0C,SAAS,EAAC,KAAK;IAACH,KAAK,EAAC,aAAa;IAACC,KAAK,EAAElB,KAAK,CAACb,UAAU,CAACK,WAAY;IAACH,IAAI,EAAC,MAAM;IAAC8B,QAAQ,EAAEb;EAAkB,CAAkB,CAC9I,CAAC,EACVN,KAAK,CAACb,UAAU,CAACO,SAAS,GACvBqB,iEAAA,CAACtC,2DAAQ,QACLsC,iEAAA;IAAKM,GAAG,EAAErB,KAAK,CAACb,UAAU,CAACO,SAAU;IAAC4B,MAAM,EAAC,OAAO;IAACC,KAAK,EAAC;EAAM,CAAE,CAC7D,CAAC,GAAI,GAAG,EACtBR,iEAAA,CAACtC,2DAAQ,QACLsC,iEAAA,CAACnC,qEAAgB;IAAC4C,MAAM,EAAE;MACtBxC,KAAK,EAAE;IACX,CAAE;IACEkC,KAAK,EAAElB,KAAK,CAACb,UAAU,CAACO,SAAU;IAAC+B,QAAQ,EAAEf;EAAa,CAAmB,CAC3E,CAAC,EACXK,iEAAA,CAACtC,2DAAQ,QACLsC,iEAAA,CAACxC,yDAAM;IACHmD,SAAS;IACTC,OAAO,EAAEA,CAAA,KAAM;MACX3B,KAAK,CAACG,aAAa,CAAC;QAAET,SAAS,EAAEC;MAAS,CAAC,CAAC;IAChD;EAAE,GACL,mBAEO,CACF,CAAC,EACXoB,iEAAA,CAACtC,2DAAQ,QACLsC,iEAAA,CAACrC,kEAAe;IAAC0C,SAAS,EAAC,KAAK;IAACH,KAAK,EAAC,iBAAiB;IAACC,KAAK,EAAElB,KAAK,CAACb,UAAU,CAACM,cAAe;IAACJ,IAAI,EAAC,MAAM;IAAC8B,QAAQ,EAAEX;EAAc,CAAkB,CACjJ,CAAC,EACVR,KAAK,CAACb,UAAU,CAACS,YAAY,GAC1BmB,iEAAA,CAACtC,2DAAQ,QACLsC,iEAAA;IAAKM,GAAG,EAAErB,KAAK,CAACb,UAAU,CAACS,YAAa;IAAC0B,MAAM,EAAC,OAAO;IAACC,KAAK,EAAC;EAAM,CAAE,CAChE,CAAC,GAAI,GAAG,EACtBR,iEAAA,CAACtC,2DAAQ,QACLsC,iEAAA,CAACnC,qEAAgB;IAAC4C,MAAM,EAAE;MACtBxC,KAAK,EAAE;IACX,CAAE;IACEkC,KAAK,EAAElB,KAAK,CAACb,UAAU,CAACS,YAAa;IAAC6B,QAAQ,EAAEZ;EAAgB,CAAmB,CACjF,CAAC,EACXE,iEAAA,CAACtC,2DAAQ,QACLsC,iEAAA,CAACxC,yDAAM;IACHmD,SAAS;IACTC,OAAO,EAAEA,CAAA,KAAM;MACX3B,KAAK,CAACG,aAAa,CAAC;QAAEP,YAAY,EAAED;MAAS,CAAC,CAAC;IACnD;EAAE,GACL,sBAEO,CACF,CACH,CACI,CAAC,EACnBK,KAAK,CAACb,UAAU,CAACC,MAAM,CAACwC,GAAG,CAAC,UAAUC,IAAI,EAAEC,KAAK,EAAE;IAChD,OACIf,iEAAA,CAAC1C,uDAAI,QACD0C,iEAAA,CAACzC,4DAAS,QACNyC,iEAAA,CAAC3C,8DAAW;MACR2D,SAAS,EAAEF,IAAI,IAAIlC,SAAU;MAC7BuB,KAAK,EAAEW,IAAK;MACZV,QAAQ,EAAEa,QAAQ,IAAI;QAClB,MAAMC,SAAS,GAAGjC,KAAK,CAACb,UAAU,CAACC,MAAM,CAAC8C,MAAM,CAAC,EAAE,CAAC;QACpDD,SAAS,CAACH,KAAK,CAAC,GAAGE,QAAQ;QAC3BhC,KAAK,CAACG,aAAa,CAAC;UAAEf,MAAM,EAAE6C;QAAU,CAAC,CAAC;MAC9C;IAAE,CACL,CACM,CACT,CAAC;EAEf,CAAC,CACH,CAAC;AAEX,C","sources":["webpack://hangman/external window [\"wp\",\"blockEditor\"]","webpack://hangman/external window [\"wp\",\"components\"]","webpack://hangman/external window [\"wp\",\"element\"]","webpack://hangman/webpack/bootstrap","webpack://hangman/webpack/runtime/compat get default export","webpack://hangman/webpack/runtime/define property getters","webpack://hangman/webpack/runtime/hasOwnProperty shorthand","webpack://hangman/webpack/runtime/make namespace object","webpack://hangman/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { TextControl, Flex, FlexBlock, Button, PanelBody, PanelRow, TextareaControl } from \"@wordpress/components\"\r\nimport { InspectorControls, MediaPlaceholder } from \"@wordpress/block-editor\"\r\n\r\nwp.blocks.registerBlockType(\"theplugin/hangman\", {\r\n    title: \"Hangman for WordPress\",\r\n    icon: \"smiley\",\r\n    category: \"common\",\r\n    attributes: {\r\n        phrase: { type: \"array\", default: [\"\"] },\r\n        allowedWrongAnswers: { type: \"string\", default: 3 },\r\n        description: { type: \"string\" },\r\n        sponsorMessage: { type: \"string\" },\r\n        wordImage: { default: undefined },\r\n        sponsorImage: { default: undefined }\r\n    },\r\n    description: \"Hangman Game for Wordpress\",\r\n    edit: EditComponent,\r\n    save: function () {\r\n        return null\r\n    }\r\n})\r\n\r\nfunction EditComponent(props) {\r\n    function setPhrase(newPhrase) {\r\n        props.setAttributes({ phrase: newPhrase })\r\n    }\r\n    function changeAllowedVal(allowedValue) {\r\n        props.setAttributes({ allowedWrongAnswers: allowedValue })\r\n    }\r\n    function changeDescription(newDescrip) {\r\n        props.setAttributes({ description: newDescrip })\r\n    }\r\n    function changeMessage(newMessage) {\r\n        props.setAttributes({ sponsorMessage: newMessage })\r\n    }\r\n    function setWordImage(newImage) {\r\n        props.setAttributes({ wordImage: newImage.url })\r\n    }\r\n    function setSponsorImage(newSponsorImage) {\r\n        props.setAttributes({ sponsorImage: newSponsorImage.url })\r\n    }\r\n    return (\r\n        <>\r\n            <InspectorControls>\r\n                <PanelBody>\r\n                    <PanelRow>\r\n                        <TextControl label=\"Allowed Wrong Answers\" value={props.attributes.allowedWrongAnswers} type=\"number\" onChange={changeAllowedVal}></TextControl>\r\n                    </PanelRow>\r\n                    <PanelRow>\r\n                        <TextareaControl maxLength=\"200\" label=\"Description\" value={props.attributes.description} type=\"text\" onChange={changeDescription}></TextareaControl>\r\n                    </PanelRow>\r\n                    {props.attributes.wordImage ? (\r\n                        <PanelRow>\r\n                            <img src={props.attributes.wordImage} height=\"100px\" width=\"100%\" />\r\n                        </PanelRow>) : \" \"}\r\n                    <PanelRow>\r\n                        <MediaPlaceholder labels={{\r\n                            title: \"Word Image\",\r\n                        }}\r\n                            value={props.attributes.wordImage} onSelect={setWordImage}></MediaPlaceholder>\r\n                    </PanelRow>\r\n                    <PanelRow>\r\n                        <Button\r\n                            isPrimary\r\n                            onClick={() => {\r\n                                props.setAttributes({ wordImage: undefined})\r\n                            }}\r\n                        >\r\n                            Remove Word Image\r\n                        </Button>\r\n                    </PanelRow>\r\n                    <PanelRow>\r\n                        <TextareaControl maxLength=\"200\" label=\"Sponsor Message\" value={props.attributes.sponsorMessage} type=\"text\" onChange={changeMessage}></TextareaControl>\r\n                    </PanelRow>\r\n                    {props.attributes.sponsorImage ? (\r\n                        <PanelRow>\r\n                            <img src={props.attributes.sponsorImage} height=\"100px\" width=\"100%\" />\r\n                        </PanelRow>) : \" \"}\r\n                    <PanelRow>\r\n                        <MediaPlaceholder labels={{\r\n                            title: \"Sponsor Image\",\r\n                        }}\r\n                            value={props.attributes.sponsorImage} onSelect={setSponsorImage}></MediaPlaceholder>\r\n                    </PanelRow>\r\n                    <PanelRow>\r\n                        <Button\r\n                            isPrimary\r\n                            onClick={() => {\r\n                                props.setAttributes({ sponsorImage: undefined})\r\n                            }}\r\n                        >\r\n                            Remove Sponsor Image\r\n                        </Button>\r\n                    </PanelRow>\r\n                </PanelBody>\r\n            </InspectorControls>\r\n            {props.attributes.phrase.map(function (word, index) {\r\n                return (\r\n                    <Flex>\r\n                        <FlexBlock>\r\n                            <TextControl\r\n                                autoFocus={word == undefined}\r\n                                value={word}\r\n                                onChange={newValue => {\r\n                                    const newphrase = props.attributes.phrase.concat([])\r\n                                    newphrase[index] = newValue\r\n                                    props.setAttributes({ phrase: newphrase })\r\n                                }}\r\n                            />\r\n                        </FlexBlock>\r\n                    </Flex>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}"],"names":["TextControl","Flex","FlexBlock","Button","PanelBody","PanelRow","TextareaControl","InspectorControls","MediaPlaceholder","wp","blocks","registerBlockType","title","icon","category","attributes","phrase","type","default","allowedWrongAnswers","description","sponsorMessage","wordImage","undefined","sponsorImage","edit","EditComponent","save","props","setPhrase","newPhrase","setAttributes","changeAllowedVal","allowedValue","changeDescription","newDescrip","changeMessage","newMessage","setWordImage","newImage","url","setSponsorImage","newSponsorImage","createElement","Fragment","label","value","onChange","maxLength","src","height","width","labels","onSelect","isPrimary","onClick","map","word","index","autoFocus","newValue","newphrase","concat"],"sourceRoot":""}